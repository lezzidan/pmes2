# Copyright 2002-2007 Barcelona Supercomputing Center (www.bsc.es)
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

dnl Process this file with autoconf to produce a configure script.
AC_INIT()

AM_INIT_AUTOMAKE(all, 0.0.0)

EXEC_ENV=execution_env
PROG_LANG="JAVA"
MODE="ALL"

AC_SUBST(EXEC_ENV)
AC_SUBST(PROG_LANG)
AC_SUBST(MODE)

dnl Checks for programs.
AC_PATH_PROG(JAVAC, javac, none)
AC_PATH_PROG(JAVA, java, none)
AC_PROG_INSTALL
AC_PATH_PROG(SH, sh, none)
AC_PATH_PROG(SSH, ssh, none)
AC_PATH_PROG(CSH, csh, none)
AC_PATH_PROG(BASH, bash, none)
AC_PATH_PROG(CP, cp, none)
AC_PATH_PROG(SCP, scp, none)
AC_PATH_PROG(MV, mv, none)
AC_PATH_PROG(RM, rm, none)
AC_PATH_PROG(LN, ln, none)
AC_PATH_PROG(MKDIR, mkdir, none)
AC_PATH_PROG(MKTEMP, mktemp, none)
AC_PATH_PROG(CHMOD, chmod, none)
AC_PATH_PROG(CAT, cat, none)
AC_PATH_PROG(SED, sed, none)
AC_PATH_PROG(SLEEP, sleep, none)
AC_PATH_PROG(GREP, grep, none)
AC_PATH_PROG(PS, ps, none)
AC_PATH_PROG(SRUN, srun, none)
AC_PATH_PROG(SL_MACHINE_LIST, sl_get_machine_list, none)
AC_PATH_PROG(LL_MACHINE_LIST, ll_get_machine_list, none)

for comm in $SH $SSH $CP $SCP $MV $CHMOD $CSH $CAT $SED $JAVA $JAVAC $GREP $PS; do
        if test x"$comm" = x"none" ; then
                AC_MSG_ERROR([Required commands missing. Please check that your path is correct])
        fi
done

AC_PROG_INSTALL
AC_PATH_PROG(GSSTUBGEN, gsstubgen, none)
if test x"$GSSTUBGEN" = x"none" ; then
        AC_MSG_ERROR([required gsstubgen program missing])
fi

dnl checks for queue submission command
AC_PATH_PROG(QUEUE_SUBMIT_PBS, qsub, none)
AC_PATH_PROG(QUEUE_SUBMIT_LL, llsubmit, none)
AC_PATH_PROG(QUEUE_SUBMIT_MN, mnsubmit, none)
AM_MAINTAINER_MODE

AC_ARG_WITH([gs-prefix],
	[  --with-gs-prefix=[prefix]  set the prefix under which the Grid Superscalar library is installed],
	[
		LIBS=-L$withval/lib $LIBS
		CPPFLAGS="-I$withval/include $CPPFLAGS"
	]
)

dnl Checks for libraries.
AC_CHECK_LIB(GS-master, GS_On,, [ AC_MSG_ERROR([Required Master Grid Supercalar library cannot be found]) ])
AC_CHECK_LIB(gsmaster, Java_GSMaster__1On,, [ AC_MSG_ERROR([Required Java Master Grid Supercalar library cannot be found]) ])
AC_CHECK_LIB(GS-worker, IniWorker,, [ AC_MSG_ERROR([Required Worker Grid Supercalar library cannot be found]) ])
AC_CHECK_LIB(gsworker, Java_GSWorker_IniWorker,, [ AC_MSG_ERROR([Required Java Worker Grid Supercalar library cannot be found]) ])

dnl Check if classads are supported. Variable set at library instalation time
AM_CONDITIONAL(USE_CLASSADS, test x"CLASSADS_SUPPORT" == x"yes" )

dnl Check source files
AC_MSG_CHECKING([Source files])
javasrcs=''
#for srcfile in `find . -name \*.java` ; do
for srcfile in `ls -1 *.java` ; do
	case $srcfile in
		PACKAGE.java | \
		PACKAGEOps.java | \
		PACKAGEImpl.java | \
		Worker.java | \
		PACKAGEConstraints.java | \
		PACKAGEConstraintsInterface.java | \
		ConstraintsWrapper.java )
			;;
		* )
			javasrcs="$javasrcs $srcfile"
			;;
	esac
done
AC_SUBST([javasrcs])
AC_MSG_RESULT([$javasrcs])

AC_OUTPUT(Makefile workerGS_script.sh workerGS.sh config_all.sh)
